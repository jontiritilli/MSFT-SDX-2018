<Page
    x:Class="SurfaceProDemo.Views.ExperiencePerformancePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{StaticResource PageStyle}"
    xmlns:ctrl="using:SDX.Toolkit.Controls"
    xmlns:conv="using:SDX.Toolkit.Converters"      
    DataContext="{Binding ExperiencePerformanceViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <conv:PercentageToCanvasLeftConverter x:Key="CanvasLeftConverter"/>
        <conv:PercentageToCanvasTopConverter x:Key="CanvasTopConverter"/>
        <conv:MathConverter x:Key="MathConverterKey"/>
    </Page.Resources>
    <Grid
        x:Name="ContentArea">
        <Grid.Background>
            <ImageBrush Stretch="UniformToFill" ImageSource="{x:Bind Path=ViewModel.BackgroundUri}" />
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource TopMargin}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource BottomMargin}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource LeftMargin}"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource RightMargin}"/>
        </Grid.ColumnDefinitions>
        
        <ctrl:Header x:Name="PageHeader" Grid.Row="1" Grid.Column="1"
            Headline="{x:Bind Path=ViewModel.Headline}"
            Lede="{x:Bind Path=ViewModel.Lede}"
            HeadlineStyle="PageHeadline"
            LedeStyle="PageLede"
            Width="{StaticResource HeaderWidth}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            HeadlineOpacity="0"
            LedeOpacity="0" />
        
        <Canvas x:Name="ButtonCanvas"
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="7"
            Grid.ColumnSpan="4"
            Canvas.ZIndex="101">
            
            <ctrl:RadiatingButton
                x:Name="rBtnLeft"
                TryItText="{x:Bind ViewModel.PopTryIt}"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.35}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.38}"                    
                PopupPosition="Right"
                RadiatingButtonIcon="touch"
                TryItEnabled="True"
                EntranceStaggerDelayInMilliseconds="600"
                AutoStart = "false"/>
            
            <ctrl:RadiatingButton
                x:Name="rBtnTop"                              
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.51}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.19}"
                EntranceStaggerDelayInMilliseconds="800"
                AutoStart = "false"/>

            <ctrl:RadiatingButton
                x:Name="rBtnRight"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.80}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.20}"                                    
                PopupPosition="Left"
                EntranceStaggerDelayInMilliseconds="1000"
                AutoStart = "false"/>
            
            <Popup
                x:Name="PopLeft"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.17}"                
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        x:Name="PopLeftPlayer"
                        PopupType="Image"
                        Headline="{x:Bind Path=ViewModel.PopTryItHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopTryItLede}"
                        MediaSourceUri="{x:Bind Path=ViewModel.PopImage}"
                        MediaHasMargin="False"
                        MediaWidth="450" />
                </Popup.Child>
            </Popup>
            
            <Popup
                x:Name="PopRight"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="-1" 
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopRightHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopRightLede}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey},Mode=OneWay, ConverterParameter=@VALUE*.3}"/>
                </Popup.Child>
            </Popup>

        </Canvas>

        <ctrl:ImageEx Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="3"
            x:Name="img_Laptop"
            ImageWidth="{x:Bind Path=ViewModel.LaptopWidth}"            
            ImageSource="{x:Bind Path=ViewModel.LaptopUri}"
                      HorizontalAlignment="Center"
            TranslateDirection="Left"
            Canvas.ZIndex="100"
            Margin="0,0,0,0"
            HasEntranceTranslation="False"
            Opacity="0" />
    </Grid>
</Page>
