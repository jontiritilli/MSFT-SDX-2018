<Page
    x:Class="SurfaceJackDemo.Views.TechPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{StaticResource PageStyle}"
    xmlns:ctrl="using:SDX.Toolkit.Controls"
    xmlns:conv="using:SDX.Toolkit.Converters"      
    DataContext="{Binding TechViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    <Page.Resources>
        <conv:PercentageToCanvasLeftConverter x:Key="CanvasLeftConverter"/>
        <conv:PercentageToCanvasTopConverter x:Key="CanvasTopConverter"/>
        <conv:MathConverter x:Key="MathConverterKey"/>
    </Page.Resources>
    <Grid x:Name="LayoutRoot" Margin="0" Padding="0">
        <Grid.Background>
            <ImageBrush ImageSource="{x:Bind Path=ViewModel.ImageUri}"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource TopMargin}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource BottomMargin}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource LeftMargin}"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource RightMargin}"/>
        </Grid.ColumnDefinitions>

        <ctrl:Header Grid.Row="1" Grid.Column="1"
            x:Name="PageHeader"                  
            Headline="{x:Bind Path=ViewModel.Headline}"
            Lede="{x:Bind Path=ViewModel.Lede}"
            CTAText="TEST"
            CTAUri="ms-settings:"
            CTATextStyle="ListItemCTAText"
            Width="{StaticResource HeaderWidth}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top" />
        
        <Canvas Grid.Row="0" Grid.Column="0" Grid.RowSpan="7" Grid.ColumnSpan="4"
            x:Name="ButtonCanvas"
            Canvas.ZIndex="101">

            <ctrl:RadiatingButton
                x:Name="rBtnLeft"
                EntranceStaggerDelayInMilliseconds = "600"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.22}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.75}"                  
                PopupPosition="Right"                
                AutoStart = "false"/>

            <ctrl:RadiatingButton 
                x:Name="rBtnTop"                           
                EntranceStaggerDelayInMilliseconds = "800"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.27}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.42}"                  
                AutoStart = "false"/>

            <ctrl:RadiatingButton
                x:Name="rBtnRight"
                EntranceStaggerDelayInMilliseconds = "1000"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.65}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.67}"                
                PopupPosition="Left"
                AutoStart = "false"/>

            <Popup
                x:Name="PopLeft"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.42}"
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Battery"
                        Headline="{x:Bind Path=ViewModel.PopLeftHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopLeftLede}"
                        HourIntegerMax="{x:Bind Path=ViewModel.PopLeftHR}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey}, Mode=OneWay, ConverterParameter=@VALUE*.3}"
                        HourText="hrs" />
                </Popup.Child>
            </Popup>

            <Popup
                x:Name="PopRight"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.15}"                 
                IsLightDismissEnabled="True">
                <ctrl:PopupMedia
                    PopupType="Text"
                    Headline="{x:Bind Path=ViewModel.PopRightHeadline}"
                    Lede="{x:Bind Path=ViewModel.PopRightLede}"
                    Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey}, Mode=OneWay, ConverterParameter=@VALUE*.3}"
                    HourText="hrs"
                    HourIntegerMax="17" />
            </Popup>
            <Popup
                x:Name="PopTop"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.15}"                 
                IsLightDismissEnabled="True">
                <ctrl:PopupMedia
                    PopupType="Text"
                    Headline="{x:Bind Path=ViewModel.PopTopHeadline}"
                    Lede="{x:Bind Path=ViewModel.PopTopLede}"
                    Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey}, Mode=OneWay, ConverterParameter=@VALUE*.3}"
                    HourText="hrs"
                    HourIntegerMax="17" />
            </Popup>
        </Canvas>
    </Grid>
</Page>
