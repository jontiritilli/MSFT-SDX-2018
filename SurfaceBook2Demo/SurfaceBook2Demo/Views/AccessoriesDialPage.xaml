<Page
    x:Class="SurfaceBook2Demo.Views.AccessoriesDialPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctrl="using:SDX.Toolkit.Controls"
    xmlns:conv="using:SDX.Toolkit.Converters"    
    DataContext="{Binding AccessoriesDialViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <conv:PercentageToCanvasLeftConverter x:Key="CanvasLeftConverter"/>
        <conv:PercentageToCanvasTopConverter x:Key="CanvasTopConverter"/>
        <conv:MathConverter x:Key="MathConverterKey"/>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Margin="0" Padding="0">
        <Grid.Background>
            <ImageBrush ImageSource="{x:Bind Path=ViewModel.BackgroundUri}"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource TopMargin}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource BottomMargin}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource LeftMargin}"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource RightMargin}"/>
        </Grid.ColumnDefinitions>

        <ctrl:Header x:Name="PageHeader" Grid.Row="1" Grid.Column="1"
                Headline="{x:Bind Path=ViewModel.Headline}"
                Lede="{x:Bind Path=ViewModel.Lede}"
                Width="{StaticResource HeaderWidth}"
                HorizontalAlignment="Left"
                HeadlineOpacity="0"
                LedeOpacity="0"
                VerticalAlignment="Top" />

        <Canvas x:Name="ButtonCanvas"
                Grid.Row="0"
                Grid.Column="0"
                Grid.RowSpan="7"
                Grid.ColumnSpan="4"
                Canvas.ZIndex="101">

            <ctrl:RadiatingButton
                x:Name="rBtnLeft"
                EntranceDurationInMilliseconds = "400"
                EntranceStaggerDelayInMilliseconds = "0"
                RadiateDurationInMilliseconds = "1800"
                RadiateStaggerDelayInMilliseconds = "5000"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.3}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.7}"                                     
                PopupPosition="Right"
                AutoStart = "false"/>

            <ctrl:RadiatingButton 
                    x:Name="rBtnTop"                              
                    EntranceDurationInMilliseconds = "400"
                    EntranceStaggerDelayInMilliseconds = "0"
                    RadiateDurationInMilliseconds = "1800"
                    RadiateStaggerDelayInMilliseconds = "5000"
                    AutoStart = "false"
                    Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.57}"
                    Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.2}"                   
                    PopupPosition="Right"
                    />
            <Popup
                x:Name="PopLeft"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="-1"
                Opened="PopDial_Opened"
                Closed="PopDial_Closed"                
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopupDialHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupDialLede}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey},Mode=OneWay, ConverterParameter=@VALUE*.3}"                         
                        />
                </Popup.Child>
            </Popup>
            <Popup
                x:Name="PopTop"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="-1"
                Opened="PopPen_Opened"
                Closed="PopPen_Closed"
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopupPenHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupPenLede}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey},Mode=OneWay, ConverterParameter=@VALUE*.3}"                         
                        />
                </Popup.Child>
            </Popup>
        </Canvas>

        <!-- TODO: This should be an ImageSelector -->
        <Image x:Name="Hero" Width="1092" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="0" Grid.RowSpan="7" Grid.Column="0" Grid.ColumnSpan="3">
            <Image.Source>
                <BitmapImage UriSource="{x:Bind Path=ViewModel.HeroUri}" DecodePixelWidth="1092" DecodePixelType="Physical"/>
            </Image.Source>
        </Image>

        <ctrl:TextBlockEx x:Name="LegalDial" Grid.Row="5" Grid.Column="1"
                       Text="{x:Bind Path=ViewModel.PopupDialLegal}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       TextStyle="Legal"
                       HasPageEntranceAnimationEnabled="False"
                       Opacity="0" />

        <ctrl:TextBlockEx x:Name="LegalPen" Grid.Row="5" Grid.Column="1"
                       Text="{x:Bind Path=ViewModel.PopupPenLegal}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       TextStyle="Legal"
                       HasPageEntranceAnimationEnabled="False"
                       Opacity="0" />

    </Grid>
</Page>
