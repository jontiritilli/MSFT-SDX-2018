<Page
    x:Class="SurfaceBook2Demo.Views.ExperienceDayCreatePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctrl="using:SDX.Toolkit.Controls"
    xmlns:conv="using:SDX.Toolkit.Converters"     
    DataContext="{Binding ExperienceDayCreateViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">
    
    <Page.Resources>
        <conv:PercentageToCanvasLeftConverter x:Key="CanvasLeftConverter"/>
        <conv:PercentageToCanvasTopConverter x:Key="CanvasTopConverter"/>
        <conv:MathConverter x:Key="MathConverterKey"/>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Margin="0" Padding="0">
        <Grid.Background>
            <ImageBrush ImageSource="{x:Bind Path=ViewModel.BackgroundUri}"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource TopMargin}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource BottomMargin}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource LeftMargin}"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource RightMargin}"/>
        </Grid.ColumnDefinitions>

        <ctrl:Header x:Name="PageHeader" Grid.Row="1" Grid.Column="1"
            Headline="{x:Bind Path=ViewModel.Headline}"
            Lede="{x:Bind Path=ViewModel.Lede}"
            Width="{StaticResource HeaderWidth}"
            HorizontalAlignment="Left"
            HeadlineOpacity="0"
            LedeOpacity="0"
            VerticalAlignment="Top" />

        <Canvas x:Name="ButtonCanvas"
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="7"
            Grid.ColumnSpan="4"
            Canvas.ZIndex="101">

            <ctrl:RadiatingButton
                x:Name="rBtnRight"
                EntranceStaggerDelayInMilliseconds = "1300"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.64}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.66}"                                 
                PopupPosition="Left"                 
                AutoStart = "false"/>

            <ctrl:RadiatingButton
                x:Name="rBtnLeft"
                EntranceStaggerDelayInMilliseconds = "1100"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.15}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.55}"                 
                PopupPosition="Right"                 
                AutoStart = "false"/>

            <ctrl:RadiatingButton 
                x:Name="rBtnTop"                              
                EntranceStaggerDelayInMilliseconds = "1200"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.45}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.33}"                                 
                PopupPosition="Right"                 
                AutoStart = "false"                                       
                />

            <Popup
                x:Name="PopLeft"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="-1"                    
                IsLightDismissEnabled="True"
                Opened="PopLeft_Opened"
                Closed="PopLeft_Closed">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopupDialHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupDialLede}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey}, Mode=OneWay, ConverterParameter=@VALUE*.4}"                         
                        />
                </Popup.Child>
            </Popup>
            <Popup
                x:Name="PopTop"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.13}"                                                     
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Image"
                        Headline="{x:Bind Path=ViewModel.PopupTransformHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupTransformLede}"
                        MediaSourceUri="{x:Bind Path=ViewModel.PopupTransformImageUri}"
                        MediaWidth="{x:Bind Path=ViewModel.PopupTransformImageWidth}"
                        MediaHasMargin="false"
                        />
                </Popup.Child>
            </Popup>
            <Popup
                x:Name="PopRight"
                IsOpen = "False"
                HorizontalOffset="-1"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.57}"        
                IsLightDismissEnabled="True"
                Opened="PopLeft_Opened"
                Closed="PopLeft_Closed">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopupPenHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupPenLede}"
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey},Mode=OneWay, ConverterParameter=@VALUE*.4}"                         
                        />
                </Popup.Child>
            </Popup>
        </Canvas>

        <ctrl:ImageEx x:Name="Hero" Width="1000" Grid.Row="3" Grid.Column="1"
            ImageWidth="1000"
            HasEntranceTranslation="False"
            PageEntranceDirection="Left"
            Opacity="0">
            <ctrl:ImageEx.BitmapImage>
                <BitmapImage UriSource="{x:Bind Path=ViewModel.HeroUri}" DecodePixelWidth="1000" DecodePixelType="Physical"/>
            </ctrl:ImageEx.BitmapImage>
        </ctrl:ImageEx>

        <ctrl:TextBlockEx x:Name="LegalCompare" Grid.Row="5" Grid.Column="1"
            Text="{x:Bind Path=ViewModel.Legal}"
            TextStyle="Legal"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"/>

    </Grid>
</Page>
