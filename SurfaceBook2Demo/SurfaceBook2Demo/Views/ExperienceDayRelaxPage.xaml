<Page
    x:Class="SurfaceBook2Demo.Views.ExperienceDayRelaxPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctrl="using:SDX.Toolkit.Controls"
    xmlns:conv="using:SDX.Toolkit.Converters"     
    DataContext="{Binding ExperienceDayRelaxViewModel, Source={StaticResource Locator}}"
    mc:Ignorable="d">

    <Page.Resources>
        <conv:PercentageToCanvasLeftConverter x:Key="CanvasLeftConverter"/>
        <conv:PercentageToCanvasTopConverter x:Key="CanvasTopConverter"/>
        <conv:MathConverter x:Key="MathConverterKey"/>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" Margin="0" Padding="0">
        <Grid.Background>
            <ImageBrush ImageSource="{x:Bind Path=ViewModel.BackgroundUri}"/>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource TopMargin}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{StaticResource SpaceBelowHeader}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="{StaticResource BottomMargin}"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource LeftMargin}"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="{StaticResource RightMargin}"/>
        </Grid.ColumnDefinitions>

        <ctrl:Header x:Name="PageHeader" Grid.Row="1" Grid.Column="1"
                Headline="{x:Bind Path=ViewModel.Headline}"
                Lede="{x:Bind Path=ViewModel.Lede}"
                Width="{StaticResource HeaderWidth}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top" />
        <Canvas x:Name="ButtonCanvas"
                Grid.Row="0"
                Grid.Column="0"
                Grid.RowSpan="7"
                Grid.ColumnSpan="4"
                Canvas.ZIndex="101">

            <ctrl:RadiatingButton
                x:Name="rBtnLeft"
                EntranceStaggerDelayInMilliseconds = "1100"
                RadiateStaggerDelayInMilliseconds = "6000"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.31}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.80}"                                                 
                PopupPosition="Right"  
                AutoStart = "false"/>
            
            <ctrl:RadiatingButton
                x:Name="rBtnRight"
                EntranceStaggerDelayInMilliseconds = "1200"
                RadiateStaggerDelayInMilliseconds = "7000"
                Canvas.Left="{Binding Converter={StaticResource CanvasLeftConverter}, ConverterParameter=0.55}"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.25}"                     
                PopupPosition="Left"  
                AutoStart = "false"/>

            <Popup
                x:Name="PopLeft"
                IsOpen = "False"
                HorizontalOffset="-1"
                VerticalOffset="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.17}"                                                                    
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Image"
                        Headline="{x:Bind Path=ViewModel.PopupHingeHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupHingeLede}"
                        MediaSourceUri="{x:Bind Path=ViewModel.PopupDisplayInsetImage}"
                        MediaWidth="{x:Bind Path=ViewModel.PopupDisplayImageWidth}"
                        />
                </Popup.Child>
            </Popup>
            
            <Popup
                x:Name="PopRight"
                IsOpen = "False"
                HorizontalOffset="-1"
                Canvas.Top="{Binding Converter={StaticResource CanvasTopConverter},ConverterParameter=0.25}"                                      
                IsLightDismissEnabled="True">
                <Popup.Child>
                    <ctrl:PopupMedia
                        PopupType="Text"
                        Headline="{x:Bind Path=ViewModel.PopupDisplayHeadline}"
                        Lede="{x:Bind Path=ViewModel.PopupDisplayLede}"                        
                        Width="{Binding Source={StaticResource CanvasWidth}, Converter={StaticResource MathConverterKey},Mode=OneWay, ConverterParameter=@VALUE*.35}"                         
                        />
                </Popup.Child>
            </Popup>


        </Canvas>
        <ctrl:ImageEx x:Name="Hero" Width="1000" Grid.Row="3" Grid.Column="1" ImageWidth="1000"
                      PageEntranceDirection="Left"
                      HasEntranceTranslation="False">
            <ctrl:ImageEx.BitmapImage>
                <BitmapImage UriSource="{x:Bind Path=ViewModel.HeroUri}" DecodePixelWidth="1000" DecodePixelType="Physical"/>
            </ctrl:ImageEx.BitmapImage>
        </ctrl:ImageEx>
    </Grid>
</Page>
